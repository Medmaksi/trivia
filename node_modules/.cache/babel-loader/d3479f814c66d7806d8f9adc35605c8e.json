{"ast":null,"code":"var _jsxFileName = \"/Users/medmaksi/trivia/src/screens/questionsScreen.js\",\n    _s = $RefreshSig$();\n\nimport React, { useContext, useEffect, useState } from 'react';\nimport { Context as AuthContext } from '../context/AuthContext';\nimport { useParams } from \"react-router-dom\";\nimport '../styles/questionsStyle.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst QuestionsScreen = () => {\n  _s();\n\n  const {\n    state,\n    getQuestions\n  } = useContext(AuthContext);\n  const [questions, setQuestions] = useState([]);\n  console.log();\n  let {\n    id\n  } = useParams();\n\n  const Item = ({\n    prop\n  }) => {\n    console.log(id);\n    console.log(questions);\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"questionContainer\",\n      children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n        children: prop[id].category\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 16,\n        columnNumber: 15\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: prop[id].question.replace(/&amp;/g, '&').replace(/&lt;/, '<').replace(/&gt;/, '>').replace(/&quot;/g, '\"').replace(/&#039;/g, \"'\")\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 19,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 15,\n      columnNumber: 13\n    }, this);\n  };\n\n  useEffect(() => {\n    getQuestions();\n  }, []);\n  useEffect(() => {\n    setQuestions(state.questions);\n  }, [state]);\n  useEffect(() => {\n    console.log(state.questions);\n    console.log(questions);\n  }, [questions]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    style: {\n      padding: '1em'\n    },\n    children: /*#__PURE__*/_jsxDEV(Item, {\n      prop: questions\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 44,\n    columnNumber: 9\n  }, this);\n};\n\n_s(QuestionsScreen, \"HIYzASJGcItxzI6MIGytgNV8snk=\", false, function () {\n  return [useParams];\n});\n\n_c = QuestionsScreen;\nexport default QuestionsScreen;\n\nvar _c;\n\n$RefreshReg$(_c, \"QuestionsScreen\");","map":{"version":3,"sources":["/Users/medmaksi/trivia/src/screens/questionsScreen.js"],"names":["React","useContext","useEffect","useState","Context","AuthContext","useParams","QuestionsScreen","state","getQuestions","questions","setQuestions","console","log","id","Item","prop","category","question","replace","padding"],"mappings":";;;AAAA,OAAOA,KAAP,IAAeC,UAAf,EAA2BC,SAA3B,EAAsCC,QAAtC,QAAqD,OAArD;AACA,SAAQC,OAAO,IAAIC,WAAnB,QAAqC,wBAArC;AACA,SAASC,SAAT,QAA0B,kBAA1B;AACA,OAAO,8BAAP;;;AAEA,MAAMC,eAAe,GAAG,MAAM;AAAA;;AAC1B,QAAM;AAACC,IAAAA,KAAD;AAAQC,IAAAA;AAAR,MAAwBR,UAAU,CAACI,WAAD,CAAxC;AACA,QAAM,CAACK,SAAD,EAAYC,YAAZ,IAA4BR,QAAQ,CAAC,EAAD,CAA1C;AACAS,EAAAA,OAAO,CAACC,GAAR;AACA,MAAI;AAAEC,IAAAA;AAAF,MAASR,SAAS,EAAtB;;AACA,QAAMS,IAAI,GAAG,CAAC;AAACC,IAAAA;AAAD,GAAD,KAAY;AACrBJ,IAAAA,OAAO,CAACC,GAAR,CAAYC,EAAZ;AACAF,IAAAA,OAAO,CAACC,GAAR,CAAYH,SAAZ;AACA,wBACI;AAAK,MAAA,SAAS,EAAC,mBAAf;AAAA,8BACE;AAAA,kBACKM,IAAI,CAACF,EAAD,CAAJ,CAASG;AADd;AAAA;AAAA;AAAA;AAAA,cADF,eAII;AAAA,kBACKD,IAAI,CAACF,EAAD,CAAJ,CAASI,QAAT,CAAkBC,OAAlB,CAA0B,QAA1B,EAAoC,GAApC,EACIA,OADJ,CACY,MADZ,EACqB,GADrB,EAEIA,OAFJ,CAEY,MAFZ,EAEoB,GAFpB,EAGIA,OAHJ,CAGY,SAHZ,EAGsB,GAHtB,EAIIA,OAJJ,CAIY,SAJZ,EAIsB,GAJtB;AADL;AAAA;AAAA;AAAA;AAAA,cAJJ;AAAA;AAAA;AAAA;AAAA;AAAA,YADJ;AAcH,GAjBD;;AAmBAjB,EAAAA,SAAS,CAAC,MAAM;AACZO,IAAAA,YAAY;AACf,GAFQ,EAEP,EAFO,CAAT;AAIAP,EAAAA,SAAS,CAAC,MAAM;AACZS,IAAAA,YAAY,CAACH,KAAK,CAACE,SAAP,CAAZ;AACH,GAFQ,EAEP,CAACF,KAAD,CAFO,CAAT;AAIAN,EAAAA,SAAS,CAAC,MAAM;AACZU,IAAAA,OAAO,CAACC,GAAR,CAAYL,KAAK,CAACE,SAAlB;AACAE,IAAAA,OAAO,CAACC,GAAR,CAAYH,SAAZ;AACH,GAHQ,EAGN,CAACA,SAAD,CAHM,CAAT;AAKA,sBACI;AAAK,IAAA,KAAK,EAAE;AAACU,MAAAA,OAAO,EAAE;AAAV,KAAZ;AAAA,2BACI,QAAC,IAAD;AAAM,MAAA,IAAI,EAAEV;AAAZ;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,UADJ;AAKH,CA1CD;;GAAMH,e;UAIWD,S;;;KAJXC,e;AA4CN,eAAeA,eAAf","sourcesContent":["import React, {useContext, useEffect, useState} from 'react';\nimport {Context as AuthContext} from '../context/AuthContext';\nimport { useParams } from \"react-router-dom\";\nimport '../styles/questionsStyle.css';\n\nconst QuestionsScreen = () => {\n    const {state, getQuestions} = useContext(AuthContext);\n    const [questions, setQuestions] = useState([]);\n    console.log()\n    let { id } = useParams();\n    const Item = ({prop}) => {\n        console.log(id);\n        console.log(questions);\n        return(\n            <div className=\"questionContainer\">\n              <h3>\n                  {prop[id].category}\n              </h3>\n                <p>\n                    {prop[id].question.replace(/&amp;/g, '&')\n                        .replace(/&lt;/ , '<')\n                        .replace(/&gt;/, '>')\n                        .replace(/&quot;/g,'\"')\n                        .replace(/&#039;/g,\"'\")}\n                </p>\n            </div>\n        )\n    }\n\n    useEffect(() => {\n        getQuestions();\n    },[]);\n\n    useEffect(() => {\n        setQuestions(state.questions);\n    },[state]);\n\n    useEffect(() => {\n        console.log(state.questions);\n        console.log(questions);\n    }, [questions]);\n\n    return(\n        <div style={{padding: '1em'}}>\n            <Item prop={questions}/>\n        </div>\n    )\n}\n\nexport default QuestionsScreen;"]},"metadata":{},"sourceType":"module"}