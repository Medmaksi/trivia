{"ast":null,"code":"var _jsxFileName = \"/Users/medmaksi/trivia/src/context/createDataContext.js\";\nimport React, { useReducer } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default ((reducer, action, defaultValue) => {\n  var _s = $RefreshSig$();\n\n  const Context = /*#__PURE__*/React.createContext();\n\n  const Provider = ({\n    children\n  }) => {\n    _s();\n\n    const [state, dispatch] = useReducer(reducer, defaultValue);\n    const boundActions = {};\n\n    for (let key in action) {\n      boundActions[key] = action[key](dispatch);\n    }\n\n    return /*#__PURE__*/_jsxDEV(Context.Provider, {\n      value: {\n        state,\n        ...boundActions\n      },\n      children: children\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 16,\n      columnNumber: 7\n    }, this);\n  };\n\n  _s(Provider, \"pdrM+HUu9kahqD/IYg8JQRTUgC0=\");\n\n  return {\n    Context: Context,\n    Provider: Provider\n  };\n});","map":{"version":3,"sources":["/Users/medmaksi/trivia/src/context/createDataContext.js"],"names":["React","useReducer","reducer","action","defaultValue","Context","createContext","Provider","children","state","dispatch","boundActions","key"],"mappings":";AAAA,OAAOA,KAAP,IAAeC,UAAf,QAAgC,OAAhC;;AAEA,gBAAe,CAACC,OAAD,EAAUC,MAAV,EAAkBC,YAAlB,KAAmC;AAAA;;AAChD,QAAMC,OAAO,gBAAGL,KAAK,CAACM,aAAN,EAAhB;;AAEA,QAAMC,QAAQ,GAAG,CAAC;AAACC,IAAAA;AAAD,GAAD,KAAgB;AAAA;;AAC/B,UAAM,CAACC,KAAD,EAAQC,QAAR,IAAoBT,UAAU,CAACC,OAAD,EAAUE,YAAV,CAApC;AAEA,UAAMO,YAAY,GAAG,EAArB;;AAEA,SAAK,IAAIC,GAAT,IAAgBT,MAAhB,EAAwB;AACtBQ,MAAAA,YAAY,CAACC,GAAD,CAAZ,GAAoBT,MAAM,CAACS,GAAD,CAAN,CAAYF,QAAZ,CAApB;AACD;;AAED,wBACE,QAAC,OAAD,CAAS,QAAT;AAAkB,MAAA,KAAK,EAAE;AAACD,QAAAA,KAAD;AAAQ,WAAGE;AAAX,OAAzB;AAAA,gBACGH;AADH;AAAA;AAAA;AAAA;AAAA,YADF;AAKD,GAdD;;AAHgD,KAG1CD,QAH0C;;AAmBhD,SAAO;AAACF,IAAAA,OAAO,EAAEA,OAAV;AAAmBE,IAAAA,QAAQ,EAAEA;AAA7B,GAAP;AACD,CApBD","sourcesContent":["import React, {useReducer} from 'react';\n\nexport default (reducer, action, defaultValue) => {\n  const Context = React.createContext();\n\n  const Provider = ({children}) => {\n    const [state, dispatch] = useReducer(reducer, defaultValue);\n\n    const boundActions = {};\n\n    for (let key in action) {\n      boundActions[key] = action[key](dispatch);\n    }\n\n    return (\n      <Context.Provider value={{state, ...boundActions}}>\n        {children}\n      </Context.Provider>\n    );\n  };\n\n  return {Context: Context, Provider: Provider};\n};\n"]},"metadata":{},"sourceType":"module"}