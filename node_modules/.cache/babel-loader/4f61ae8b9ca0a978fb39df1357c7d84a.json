{"ast":null,"code":"import createDataContext from './createDataContext';\n\nconst axios = require('axios');\n\nconst authReducer = (state, action) => {\n  switch (action.type) {\n    case 'getToken':\n      console.log(action.token);\n      return { ...state,\n        token: action.token\n      };\n\n    case 'getQuestions':\n      return { ...state,\n        questions: action\n      };\n\n    default:\n      return state;\n  }\n};\n\nconst getToken = dispatch => {\n  return () => {\n    axios.post('https://opentdb.com/api_token.php?command=request').then(function (response) {\n      dispatch({\n        type: 'getToken',\n        token: response.data.token\n      });\n      console.log(response.data.token);\n    }).catch(function (error) {\n      console.log(error.response);\n    });\n  };\n};\n\nconst getQuestions = dispatch => {\n  return token => {\n    axios.post('https://opentdb.com/api.php?amount=10').then(function (response) {\n      dispatch({\n        type: 'getQuestions',\n        payload: {\n          questions: response.data.results\n        }\n      });\n    }).catch(function (error) {\n      console.log(error.response);\n    });\n  };\n};\n\nexport const {\n  Provider,\n  Context\n} = createDataContext(authReducer, {\n  getToken,\n  getQuestions\n}, {\n  token: null,\n  questions: null\n});","map":{"version":3,"sources":["/Users/medmaksi/trivia/src/context/AuthContext.js"],"names":["createDataContext","axios","require","authReducer","state","action","type","console","log","token","questions","getToken","dispatch","post","then","response","data","catch","error","getQuestions","payload","results","Provider","Context"],"mappings":"AAAA,OAAOA,iBAAP,MAA8B,qBAA9B;;AACA,MAAMC,KAAK,GAAGC,OAAO,CAAC,OAAD,CAArB;;AAEA,MAAMC,WAAW,GAAG,CAACC,KAAD,EAAQC,MAAR,KAAmB;AACrC,UAAQA,MAAM,CAACC,IAAf;AACE,SAAK,UAAL;AACEC,MAAAA,OAAO,CAACC,GAAR,CAAYH,MAAM,CAACI,KAAnB;AACA,aAAO,EACL,GAAGL,KADE;AAELK,QAAAA,KAAK,EAAEJ,MAAM,CAACI;AAFT,OAAP;;AAIF,SAAK,cAAL;AACE,aAAO,EACL,GAAGL,KADE;AAELM,QAAAA,SAAS,EAAEL;AAFN,OAAP;;AAIF;AACE,aAAOD,KAAP;AAbJ;AAeD,CAhBD;;AAkBA,MAAMO,QAAQ,GAAIC,QAAD,IAAc;AAC7B,SAAM,MAAM;AACVX,IAAAA,KAAK,CACAY,IADL,CACU,mDADV,EAGKC,IAHL,CAGU,UAAUC,QAAV,EAAoB;AACxBH,MAAAA,QAAQ,CAAC;AACPN,QAAAA,IAAI,EAAE,UADC;AAEPG,QAAAA,KAAK,EAAEM,QAAQ,CAACC,IAAT,CAAcP;AAFd,OAAD,CAAR;AAIAF,MAAAA,OAAO,CAACC,GAAR,CAAYO,QAAQ,CAACC,IAAT,CAAcP,KAA1B;AACD,KATL,EAUKQ,KAVL,CAUW,UAAUC,KAAV,EAAiB;AACtBX,MAAAA,OAAO,CAACC,GAAR,CAAYU,KAAK,CAACH,QAAlB;AACD,KAZL;AAaD,GAdD;AAeD,CAhBD;;AAkBA,MAAMI,YAAY,GAAIP,QAAD,IAAc;AACjC,SAAQH,KAAD,IAAW;AAChBR,IAAAA,KAAK,CACAY,IADL,CACU,uCADV,EAGKC,IAHL,CAGU,UAAUC,QAAV,EAAoB;AACxBH,MAAAA,QAAQ,CAAC;AACPN,QAAAA,IAAI,EAAE,cADC;AAEPc,QAAAA,OAAO,EAAE;AACPV,UAAAA,SAAS,EAAEK,QAAQ,CAACC,IAAT,CAAcK;AADlB;AAFF,OAAD,CAAR;AAMD,KAVL,EAWKJ,KAXL,CAWW,UAAUC,KAAV,EAAiB;AACtBX,MAAAA,OAAO,CAACC,GAAR,CAAYU,KAAK,CAACH,QAAlB;AACD,KAbL;AAcD,GAfD;AAgBD,CAjBD;;AAmBA,OAAO,MAAM;AAACO,EAAAA,QAAD;AAAWC,EAAAA;AAAX,IAAsBvB,iBAAiB,CAClDG,WADkD,EAElD;AAACQ,EAAAA,QAAD;AAAWQ,EAAAA;AAAX,CAFkD,EAGlD;AAACV,EAAAA,KAAK,EAAE,IAAR;AAAcC,EAAAA,SAAS,EAAE;AAAzB,CAHkD,CAA7C","sourcesContent":["import createDataContext from './createDataContext';\nconst axios = require('axios');\n\nconst authReducer = (state, action) => {\n  switch (action.type) {\n    case 'getToken':\n      console.log(action.token)\n      return {\n        ...state,\n        token: action.token\n      }\n    case 'getQuestions':\n      return {\n        ...state,\n        questions: action\n      }\n    default:\n      return state;\n  }\n};\n\nconst getToken = (dispatch) => {\n  return() => {\n    axios\n        .post('https://opentdb.com/api_token.php?command=request',\n        )\n        .then(function (response) {\n          dispatch({\n            type: 'getToken',\n            token: response.data.token\n          });\n          console.log(response.data.token)\n        })\n        .catch(function (error) {\n          console.log(error.response);\n        });\n  }\n}\n\nconst getQuestions = (dispatch) => {\n  return (token) => {\n    axios\n        .post('https://opentdb.com/api.php?amount=10',\n        )\n        .then(function (response) {\n          dispatch({\n            type: 'getQuestions',\n            payload: {\n              questions: response.data.results\n            }\n          })\n        })\n        .catch(function (error) {\n          console.log(error.response);\n        });\n  }\n}\n\nexport const {Provider, Context} = createDataContext(\n  authReducer,\n  {getToken, getQuestions},\n  {token: null, questions: null},\n);\n"]},"metadata":{},"sourceType":"module"}