{"ast":null,"code":"var _jsxFileName = \"/Users/medmaksi/trivia/src/screens/questionsScreen.js\",\n    _s = $RefreshSig$();\n\nimport React, { useContext, useEffect, useState } from 'react';\nimport { Context as AuthContext } from '../context/AuthContext';\nimport '../styles/questionsStyle.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst QuestionsScreen = () => {\n  _s();\n\n  const {\n    state,\n    getQuestions\n  } = useContext(AuthContext);\n  const [questions, setQuestions] = useState([]);\n\n  const Item = ({\n    prop\n  }) => {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"questionContainer\",\n      children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n        children: prop.category\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 13,\n        columnNumber: 15\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: prop.question.replace(/&amp;/g, '&').replace(/&lt;/, '<').replace(/&gt;/, '>').replace(/&quot;/g, '\"').replace(/&#039;/g, \"'\")\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 16,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 12,\n      columnNumber: 13\n    }, this);\n  };\n\n  useEffect(() => {\n    getQuestions();\n  }, []);\n  useEffect(() => {\n    setQuestions(state.questions);\n  }, [state]);\n  useEffect(() => {\n    console.log(state.questions);\n    console.log(questions);\n  }, [questions]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    style: {\n      padding: '1em'\n    },\n    children: questions !== null ? questions.map(question => {\n      return /*#__PURE__*/_jsxDEV(Item, {\n        prop: question\n      }, question.correct_answer, false, {\n        fileName: _jsxFileName,\n        lineNumber: 44,\n        columnNumber: 20\n      }, this);\n    }) : null\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 41,\n    columnNumber: 9\n  }, this);\n};\n\n_s(QuestionsScreen, \"hjS2Gjsp0eA9Gr3hT9/68QhRoyU=\");\n\n_c = QuestionsScreen;\nexport default QuestionsScreen;\n\nvar _c;\n\n$RefreshReg$(_c, \"QuestionsScreen\");","map":{"version":3,"sources":["/Users/medmaksi/trivia/src/screens/questionsScreen.js"],"names":["React","useContext","useEffect","useState","Context","AuthContext","QuestionsScreen","state","getQuestions","questions","setQuestions","Item","prop","category","question","replace","console","log","padding","map","correct_answer"],"mappings":";;;AAAA,OAAOA,KAAP,IAAeC,UAAf,EAA2BC,SAA3B,EAAsCC,QAAtC,QAAqD,OAArD;AACA,SAAQC,OAAO,IAAIC,WAAnB,QAAqC,wBAArC;AAEA,OAAO,8BAAP;;;AAEA,MAAMC,eAAe,GAAG,MAAM;AAAA;;AAC1B,QAAM;AAACC,IAAAA,KAAD;AAAQC,IAAAA;AAAR,MAAwBP,UAAU,CAACI,WAAD,CAAxC;AACA,QAAM,CAACI,SAAD,EAAYC,YAAZ,IAA4BP,QAAQ,CAAC,EAAD,CAA1C;;AAEA,QAAMQ,IAAI,GAAG,CAAC;AAACC,IAAAA;AAAD,GAAD,KAAY;AACrB,wBACI;AAAK,MAAA,SAAS,EAAC,mBAAf;AAAA,8BACE;AAAA,kBACKA,IAAI,CAACC;AADV;AAAA;AAAA;AAAA;AAAA,cADF,eAII;AAAA,kBACKD,IAAI,CAACE,QAAL,CAAcC,OAAd,CAAsB,QAAtB,EAAgC,GAAhC,EACIA,OADJ,CACY,MADZ,EACqB,GADrB,EAEIA,OAFJ,CAEY,MAFZ,EAEoB,GAFpB,EAGIA,OAHJ,CAGY,SAHZ,EAGsB,GAHtB,EAIIA,OAJJ,CAIY,SAJZ,EAIsB,GAJtB;AADL;AAAA;AAAA;AAAA;AAAA,cAJJ;AAAA;AAAA;AAAA;AAAA;AAAA,YADJ;AAcH,GAfD;;AAiBAb,EAAAA,SAAS,CAAC,MAAM;AACZM,IAAAA,YAAY;AACf,GAFQ,EAEP,EAFO,CAAT;AAIAN,EAAAA,SAAS,CAAC,MAAM;AACZQ,IAAAA,YAAY,CAACH,KAAK,CAACE,SAAP,CAAZ;AACH,GAFQ,EAEP,CAACF,KAAD,CAFO,CAAT;AAIAL,EAAAA,SAAS,CAAC,MAAM;AACZc,IAAAA,OAAO,CAACC,GAAR,CAAYV,KAAK,CAACE,SAAlB;AACAO,IAAAA,OAAO,CAACC,GAAR,CAAYR,SAAZ;AACH,GAHQ,EAGN,CAACA,SAAD,CAHM,CAAT;AAKA,sBACI;AAAK,IAAA,KAAK,EAAE;AAAKS,MAAAA,OAAO,EAAE;AAAd,KAAZ;AAAA,cACKT,SAAS,KAAK,IAAd,GAAqBA,SAAS,CAACU,GAAV,CAAeL,QAAD,IAAc;AAC/C,0BACI,QAAC,IAAD;AAAoC,QAAA,IAAI,EAAEA;AAA1C,SAAWA,QAAQ,CAACM,cAApB;AAAA;AAAA;AAAA;AAAA,cADJ;AAGF,KAJqB,CAArB,GAII;AALT;AAAA;AAAA;AAAA;AAAA,UADJ;AASH,CA3CD;;GAAMd,e;;KAAAA,e;AA6CN,eAAeA,eAAf","sourcesContent":["import React, {useContext, useEffect, useState} from 'react';\nimport {Context as AuthContext} from '../context/AuthContext';\n\nimport '../styles/questionsStyle.css';\n\nconst QuestionsScreen = () => {\n    const {state, getQuestions} = useContext(AuthContext);\n    const [questions, setQuestions] = useState([]);\n\n    const Item = ({prop}) => {\n        return(\n            <div className=\"questionContainer\">\n              <h3>\n                  {prop.category}\n              </h3>\n                <p>\n                    {prop.question.replace(/&amp;/g, '&')\n                        .replace(/&lt;/ , '<')\n                        .replace(/&gt;/, '>')\n                        .replace(/&quot;/g,'\"')\n                        .replace(/&#039;/g,\"'\")}\n                </p>\n            </div>\n        )\n    }\n\n    useEffect(() => {\n        getQuestions();\n    },[]);\n\n    useEffect(() => {\n        setQuestions(state.questions);\n    },[state]);\n\n    useEffect(() => {\n        console.log(state.questions);\n        console.log(questions);\n    }, [questions]);\n\n    return(\n        <div style={{    padding: '1em'}}>\n            {questions !== null ? questions.map((question) => {\n               return(\n                   <Item key={question.correct_answer} prop={question}/>\n               )\n            }) : null}\n        </div>\n    )\n}\n\nexport default QuestionsScreen;"]},"metadata":{},"sourceType":"module"}